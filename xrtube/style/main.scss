:root {
    --thumb-width: min(33svw, 10rem);
    --thumb-height: calc(10rem / (16 / 9));
    --text-big: 1.25rem;
    --text-small: 0.875rem;
    --side: min(90svw, 20rem);
    --gap: 1rem;
    --gap-small: 0.6rem;
    --hpad: 0.25rem;
    --vpad: 0.375rem;
    --radius: 0.6rem;
    --accent: #2a32a9;
}

html {
    height: 100%;
    overflow-wrap: anywhere;
}

body {
    background: #fafafa;
    min-height: 100%;
    display: grid;
    grid-template-rows: 1.75rem auto 1fr;
    grid-template-columns: auto var(--side);
    justify-content: center;
    gap: var(--gap);
    padding: var(--gap);

    &:has(#group.empty) {
        grid-template-rows: 1.75rem 1fr;
    }
    &:has(#video-column.empty) {
        grid-template-columns: 
            minmax(0, calc(var(--side) * 3 + var(--gap) * 2));
    }
}

p { 
    margin: 0;
}

a {
    text-decoration-line: none;
    color: var(--accent);
}

h1 {
    font-size: var(--text-big);
    font-weight: 500;
}

input, button {
    border-radius: var(--radius);
    padding: var(--hpad) var(--vpad);
    border: 1px solid black;
    outline: 0;

    &:focus-visible {
        border-color: var(--accent);
    }
}

img {
    border-radius: var(--radius);
    object-fit: cover;
}

:not(#explore-column).empty {
    display: none; 
}

.elide {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

#search {
    grid-column: 1 / -1;

    > input[type=search] {
        width: 100%;
        height: 100%;
    }
}

#group {
    grid-row: 2;
    grid-column: -2 / -1;
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: center;
    gap: var(--gap);

    > .banner {
        width: 100%;
        height: 12rem;
    }

    > .avatar-info {
        display: flex;
        flex-flow: row wrap;
        align-items: center;
        justify-content: center;
        gap: var(--gap);

        > .avatar {
            align-self: flex-start;
        }

        > .info {
            flex: 1;
            min-width: var(--thumb-width);
            > h1 { 
                display: inline;
                margin-right: var(--gap-small);
            }
            > p {
                margin-top: var(--gap-small);
            }
        }
    }

    > nav {
        display: flex;
        flex-flow: row wrap;
        gap: var(--gap-small);
    }
}

#video-column {
    grid-row: 2 / -1;
    grid-column: 1;
    min-width: #{"min(120svh, 40svw)"};
    max-width: #{"min(120svh, max(50rem, 40svw))"};
}

.yt-markup {
    white-space: pre-wrap;
}

// HACK: Round corners won't show without overflow: hidden, but then menues
//   like the quality selector get clipped when player gets too small...
#player-holder {
    border-radius: var(--radius);
    overflow: hidden;
    // Apprently this makes the transform above render on the GPU or something
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
}

media-controller {
    display: block;

    &:not([mediahasplayed]), &[mediaended] {
        > media-loading-indicator {
            --media-control-display: none;
        }
    }

    &[mediahasplayed]:not([mediaended]) {
        > media-play-button[slot=centered-chrome] {
            --media-control-display: none;
        }
    }

    & media-airplay-button[mediaairplayunavailable],
    & media-cast-button[mediacastunavailable],
    & media-pip-button[mediapipunavailable] {
        --media-control-display: none;
    }

    & media-airplay-button[mediaisairplaying],
    & media-pip-button[mediaispip],
    & media-cast-button[mediaiscasting] {
        --media-primary-color: cyan;
    }

    & [part~="select-indicator"] {
        display: var(--media-option-select-indicator-display);
        visibility: hidden;
    }
    & [aria-selected="true"] > [part~="select-indicator"] {
        visibility: visible;
    }
    & [part~="indicator"] {
        fill: var(--media-option-indicator-fill, var(--media-icon-color, var(--media-primary-color, rgb(238, 238, 238))));
        height: var(--media-option-indicator-height, 1.25em);
        vertical-align: var(--media-option-indicator-vertical-align, text-top);
    }
    media-chrome-listbox {
        user-select: none;
    }
    media-chrome-option > span {
        margin-inline: 0.5ch;
    }

    [slot=header] {
        font-weight: 500;
        padding: 0.4em 0.8em;
    }
}

#player {
    overflow-wrap: initial;  // Fix timestamp tooltip on progress bar hover

    .vjs-big-play-button {
        border-radius: 1.63332em;
        width: 1.63332em;
    }

    // HACK: ...So let's make them smaller by turning them into grids
    .vjs-menu-content {
        max-height: 80vh;
        overflow-x: hidden;
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr 1fr;
        width: auto;
        margin-left: -100%;

        > .vjs-menu-title {
            grid-column: 1 / -1;
            padding: var(--hpad) var(--vpad);
        }

        > .vjs-menu-item {
            padding: var(--hpad) var(--vpad);
        }
    }
    .hls-quality-button .vjs-menu-content {
        margin-left: -10%;
        > .vjs-menu-title {
            order: -2;
            grid-column: 1 / 3;
        };
        > .vjs-menu-item:last-child {
            order: -1;
        }
    }
    .vjs-loop-control {
        cursor: pointer;
        transition: color 0.4s ease-in-out;
        &.active { color: cyan; }
    }
}

#explore-column {
    grid-row: -2 / -1;
    grid-column: -2 / -1;
}

.page {
    display: grid;
    grid-template-columns: repeat(auto-fit, var(--side));
    justify-content: center;
    gap: var(--gap-small);

    &:not(:first-child) {
        margin-top: var(--gap-small)
    }
}

.entry {
    display: grid;
    grid-template-columns: var(--thumb-width) 1fr;
    grid-template-rows: var(--thumb-height);
    gap: var(--gap-small);

    .thumbnail {
        grid-row: 1 / 1;

        > div {
            position: relative;
            height: 100%;

            > img {
                width: 100%;
                height: 100%;
            }
            > .duration {
                position: absolute;
                bottom: 0;
                right: 0;
            }
        }
    }
    .duration {
        // scale as workaround to < 1.4rem font-size giving strange padding
        font-size: var(--text-small);
        transform: scale(80%);
        color: white;
        background: hsla(0, 0%, 0%, 0.7);
        font-variant: small-caps;  // for LIVE/SOON
        margin: 0.0625rem;
        padding: var(--hpad) var(--vpad);
        border-radius: var(--radius);
    }
    .info {
        display: grid;
        grid-template-columns: auto 1fr;
        grid-template-rows: auto auto;
        align-content: center;
        align-items: end;
        gap: 0.125rem var(--vpad);

        .title {
            grid-column: 1 / -1;
            -webkit-line-clamp: 3;
            &:has(+ :not(.channel)) { -webkit-line-clamp: 4; }
            &:last-child { -webkit-line-clamp: 5; }
        }
        .channel {
            grid-column: 1 / -1;
        }
        .followers > .icon {
            font-weight: bold; 
        }
        :not(.title) {
            font-size: var(--text-small);
            > :not(.icon) { font-weight: 300; }
        }
    }
}

.nothing-found {
    opacity: 0.4;
    display: flex;
    height: 100%;
    justify-content: center;
    align-items: center;
}

.lazy-loader {
    position: absolute;
    pointer-events: none;
    margin-top: -10svh;
    height: 10svh;
    // width: 20svw;
    // background: rgba(0, 255, 0, 0.5);

    &.large {
        margin-top: -200svh;
        height: 200svh;
        // background: rgba(255, 0, 0, 0.2);
    }
}

@media all and (max-width: 48rem) {  // 768px at 16px font size
    body {
        grid-template-columns: 1fr;
        grid-template-rows: 1.75rem auto auto;

        // TODO: there has to be a better way
        &:has(#video-column.empty) {
            grid-template-rows: 1.75rem auto;
        }
        &:has(#group.empty) {
            grid-template-rows: 1.75rem auto;
            &:has(#video-column.empty) {
                grid-template-rows: auto;
            }
        }
    }
    #explore-column {
        grid-row: -1;
    }
}
// calc(var(--side) + var(--gap) * 2) * 2
@media all and (max-width: calc((20rem + 1rem * 2) * 2)) {
    .page {
        grid-template-columns: auto;
    }
}
@media all and (max-width: 20rem) {  // var(--side)
    .entry .info:has(.title + :not(.channel))  {
        grid-template-columns: 1fr;
    }
    .entry .info .title {
        -webkit-line-clamp: 2;
        &:has(+ :not(.channel)) { -webkit-line-clamp: 3; }
        &:last-child { -webkit-line-clamp: 4; }
    }
}
